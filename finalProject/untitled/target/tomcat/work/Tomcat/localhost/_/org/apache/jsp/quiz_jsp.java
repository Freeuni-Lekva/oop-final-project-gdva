/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2023-08-20 11:19:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import quizpackage.model.DBHandler;
import java.util.List;
import quizpackage.model.quizzes.*;
import java.util.Collection;
import java.util.Collections;

public final class quiz_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <link href=\"/CSS/quiz.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<video autoplay muted loop id=\"backgrVid\">\r\n");
      out.write("    <source src=\"/CSS/backgr.mp4\" type=\"video/mp4\">\r\n");
      out.write("</video>\r\n");
      out.write("\r\n");

    DBHandler handler = (DBHandler)application.getAttribute("handler");
    String id = request.getParameter("id");
    int ID = Integer.parseInt(id);
    session.setAttribute("quizID",id);
    String buttonValue = request.getParameter("buttonValue");
    Quiz quiz = handler.getQuiz(ID);
    List<Question> questions = quiz.getQuestions();

    Integer multiID = (Integer)session.getAttribute("multiID");
    if(buttonValue == null) multiID = null;

      out.write("\r\n");
      out.write("<form action=\"FinishOnePageQuizServlet\" method=\"get\">\r\n");
      out.write("<div id=\"entireDiv\">\r\n");
      out.write("    <h1>");
      out.print( quiz.getTitle() );
      out.write("</h1>\r\n");
      out.write("    <div id = \"questionsAndButtonsDiv\">\r\n");
      out.write("        <div id=\"questionsDiv\">\r\n");
      out.write("        <div class=\"questions-container\">\r\n");
      out.write("            ");

                int count = 0;
            
      out.write("\r\n");
      out.write("            ");

            if(quiz.areQuestionsOnSinglePage()){
                if(!quiz.isOrdered()){
                    Collections.shuffle(questions);
                }
                session.setAttribute("Questions",questions);
            
      out.write("\r\n");
      out.write("\r\n");
      out.write("            ");
 for (Question question : questions) {
                count++;
            if(question.getQuestionClass().equals("QuestionResponse")) {
      out.write("\r\n");
      out.write("                <div class=\"question\">\r\n");
      out.write("                    <p class=\"question-text\">");
      out.print(count + "." +question.getQuestionText() );
      out.write("</p>\r\n");
      out.write("                </div>\r\n");
      out.write("            <input type=\"text\" name=\"");
      out.print(count);
      out.write("\" class=\"answer-field\" placeholder=\"Enter your answer\">\r\n");
      out.write("            ");
}else if(question.getQuestionClass().equals("FillTheBlank")){ 
      out.write("\r\n");
      out.write("                <div class=\"question\">\r\n");
      out.write("                    <p class=\"question-text\">");
      out.print(count + "." + question.getQuestionText() );
      out.write("</p>\r\n");
      out.write("                    <input type=\"text\" name=\"");
      out.print(count);
      out.write("\" class=\"answer-field\" placeholder=\"Enter your answer\">\r\n");
      out.write("                </div>\r\n");
      out.write("            ");
} else if (question.getQuestionClass().equals("PictureResponse")) { 
      out.write("\r\n");
      out.write("                ");

                    PictureResponse pictureQuestion = (PictureResponse) question;
                
      out.write("\r\n");
      out.write("            <div class=\"question\">\r\n");
      out.write("                <p class=\"question-text\">");
      out.print(count + "." + question.getQuestionText() );
      out.write("</p>\r\n");
      out.write("                <div class=\"image-question-container\">\r\n");
      out.write("                    <img src=\"");
      out.print( pictureQuestion.getImage() );
      out.write("\" alt=\"Question Image\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <input type=\"text\" name=\"");
      out.print(count);
      out.write("\" class=\"answer-field\" placeholder=\"Enter your answer\">\r\n");
      out.write("            </div>\r\n");
      out.write("            ");
 } else if (question.getQuestionClass().equals("MultipleChoiceSingleAnswer")) { 
      out.write("\r\n");
      out.write("            <div class=\"question\">\r\n");
      out.write("                <p class=\"question-text\">");
      out.print(count + "." + question.getQuestionText() );
      out.write("</p>\r\n");
      out.write("                <ul class=\"answer-options\">\r\n");
      out.write("                    ");

                       MultipleChoiceSingleAnswer multipleChoiceQuestion = (MultipleChoiceSingleAnswer)question;
                       List<String> answers = multipleChoiceQuestion.getPossibleAnswers();
                       handler.debug(answers.size()+"");
                    
      out.write("\r\n");
      out.write("                    ");
 for (int i = 0; i < answers.size(); i++) { 
      out.write("\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <label>\r\n");
      out.write("                            <input type=\"radio\" name=\"");
      out.print(count);
      out.write("\" value=\"");
      out.print( answers.get(i) );
      out.write("\">\r\n");
      out.write("                            ");
      out.print( answers.get(i) );
      out.write("\r\n");
      out.write("                        </label>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            ");
 } } 
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("        <div id=\"buttonsDiv\">\r\n");
      out.write("            <button class=\"custom-button\">Finish Quiz</button>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    ");
 } else { // multiple 
      out.write("\r\n");
      out.write("    ");

        session.setAttribute("Questions",questions);
        Question question = null;
        if(multiID == null){
            question = questions.get(0);
            session.setAttribute("multiID",0);
            multiID = 0;
        } else {
            if(buttonValue != null && buttonValue.equals("Next")){
                multiID++;
            }
            question = questions.get(multiID);
            session.setAttribute("multiID",multiID);
        }
    
      out.write("\r\n");
      out.write("    <div id = \"questionAndButtonsDiv\">\r\n");
      out.write("        <div id=\"questionDiv\">\r\n");
      out.write("            <div class=\"questions-container\">\r\n");
      out.write("                ");
session.setAttribute("curIdx",(multiID+1));
      out.write("\r\n");
      out.write("                 ");
if(question.getQuestionClass().equals("QuestionResponse")) {
      out.write("\r\n");
      out.write("                <div class=\"question\">\r\n");
      out.write("                    <p class=\"question-text\">");
      out.print((multiID+1) + "." +question.getQuestionText() );
      out.write("</p>\r\n");
      out.write("                </div>\r\n");
      out.write("                <input type=\"text\" name=\"");
      out.print((multiID+1));
      out.write("\" class=\"answer-field\" placeholder=\"Enter your answer\">\r\n");
      out.write("                ");
}else if(question.getQuestionClass().equals("FillTheBlank")){ 
      out.write("\r\n");
      out.write("                <div class=\"question\">\r\n");
      out.write("                    <p class=\"question-text\">");
      out.print((multiID+1) + "." + question.getQuestionText() );
      out.write("</p>\r\n");
      out.write("                    <input type=\"text\" name=\"");
      out.print((multiID+1));
      out.write("\" class=\"answer-field\" placeholder=\"Enter your answer\">\r\n");
      out.write("                </div>\r\n");
      out.write("                ");
} else if (question.getQuestionClass().equals("PictureResponse")) { 
      out.write("\r\n");
      out.write("                ");

                    PictureResponse pictureQuestion = (PictureResponse) question;
                
      out.write("\r\n");
      out.write("                <div class=\"question\">\r\n");
      out.write("                    <p class=\"question-text\">");
      out.print((multiID+1) + "." + question.getQuestionText() );
      out.write("</p>\r\n");
      out.write("                    <div class=\"image-question-container\">\r\n");
      out.write("                        <img src=\"");
      out.print( pictureQuestion.getImage() );
      out.write("\" alt=\"Question Image\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <input type=\"text\" name=\"");
      out.print((multiID+1));
      out.write("\" class=\"answer-field\" placeholder=\"Enter your answer\">\r\n");
      out.write("                </div>\r\n");
      out.write("                ");
 } else if (question.getQuestionClass().equals("MultipleChoiceSingleAnswer")) { 
      out.write("\r\n");
      out.write("                <div class=\"question\">\r\n");
      out.write("                    <p class=\"question-text\">");
      out.print((multiID+1) + "." + question.getQuestionText() );
      out.write("</p>\r\n");
      out.write("                    <ul class=\"answer-options\">\r\n");
      out.write("                        ");

                            MultipleChoiceSingleAnswer multipleChoiceQuestion = (MultipleChoiceSingleAnswer)question;
                            List<String> answers = multipleChoiceQuestion.getPossibleAnswers();
                            handler.debug(answers.size()+"");
                        
      out.write("\r\n");
      out.write("                        ");
 for (int i = 0; i < answers.size(); i++) { 
      out.write("\r\n");
      out.write("                        <li>\r\n");
      out.write("                            <label>\r\n");
      out.write("                                <input type=\"radio\" name=\"");
      out.print((multiID+1));
      out.write("\" value=\"");
      out.print( answers.get(i) );
      out.write("\">\r\n");
      out.write("                                ");
      out.print( answers.get(i) );
      out.write("\r\n");
      out.write("                            </label>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        ");
 } 
      out.write("\r\n");
      out.write("                    </ul>\r\n");
      out.write("                </div>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"buttons-container\">\r\n");
      out.write("        ");
if(multiID != questions.size()-1){
            if(!quiz.immediateAnswerNeeded()){
        
      out.write("\r\n");
      out.write("        <div class = \"centered-button\">\r\n");
      out.write("        <div id=\"buttonsDiv2\">\r\n");
      out.write("            <input type=\"hidden\" name=\"buttonValue\" value=\"Next\">\r\n");
      out.write("            <button class=\"custom-button\">Next</button>\r\n");
      out.write("        </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");

            } else {
        
      out.write("\r\n");
      out.write("        <div class = \"centered-button\">\r\n");
      out.write("            <div id=\"buttonsDiv4\">\r\n");
      out.write("                <input type=\"hidden\" name=\"buttonValue\" value=\"Confirm\">\r\n");
      out.write("                <input type=\"hidden\" name=\"questionId\" value=\"");
      out.print((multiID));
      out.write("\">\r\n");
      out.write("                <button class=\"custom-button\">Confirm</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
} } else {
      out.write("\r\n");
      out.write("        <div class = \"centered-button\">\r\n");
      out.write("        <div id=\"buttonsDiv3\">\r\n");
      out.write("            <input type=\"hidden\" name=\"buttonValue\" value=\"Finish\">\r\n");
      out.write("            <button class=\"custom-button\">Finish Quiz</button>\r\n");
      out.write("        </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
}
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
